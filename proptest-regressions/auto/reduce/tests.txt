# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
xs 2151308167 1707236779 2576128606 4078881362 # shrinks to (nfa, nfa_start) = (Automaton { states: [State { pol: Pos, cons: ConstructorSet { set: {Discriminant(1): Fun} }, trans: TransitionSet { set: {Transition { symbol: Domain, id: 1 }, Transition { symbol: Range, id: 4 }} }, flow: FlowSet { set: {} } }, State { pol: Neg, cons: ConstructorSet { set: {Discriminant(1): Fun} }, trans: TransitionSet { set: {Transition { symbol: Domain, id: 2 }, Transition { symbol: Range, id: 3 }} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Neg, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {5, 4} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {3} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {3} } }] }, 0)
xs 751829225 1201016785 3994787844 1681761632 # shrinks to (nfa, nfa_start) = (Automaton { states: [State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({}), Discriminant(1): Fun} }, trans: TransitionSet { set: {Transition { symbol: Domain, id: 3 }, Transition { symbol: Range, id: 4 }} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({})} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(1): Fun} }, trans: TransitionSet { set: {Transition { symbol: Domain, id: 3 }, Transition { symbol: Range, id: 4 }} }, flow: FlowSet { set: {} } }, State { pol: Neg, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {4} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {3} } }] }, 0)xs 1302583178 3066216929 2367225011 2527484656 # shrinks to (nfa, nfa_start) = (Automaton { states: [State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({"h", "o", "z"})} }, trans: TransitionSet { set: {Transition { symbol: Label("h"), id: 1 }, Transition { symbol: Label("o"), id: 2 }, Transition { symbol: Label("z"), id: 6 }} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({})} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({"m"})} }, trans: TransitionSet { set: {Transition { symbol: Label("m"), id: 3 }} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({"o", "q"})} }, trans: TransitionSet { set: {Transition { symbol: Label("o"), id: 4 }, Transition { symbol: Label("q"), id: 5 }} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {11} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(2): Record({"f", "i", "k", "m", "v", "w"})} }, trans: TransitionSet { set: {Transition { symbol: Label("f"), id: 7 }, Transition { symbol: Label("i"), id: 8 }, Transition { symbol: Label("k"), id: 9 }, Transition { symbol: Label("m"), id: 10 }, Transition { symbol: Label("v"), id: 13 }, Transition { symbol: Label("w"), id: 14 }} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(0): Bool} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(1): Fun} }, trans: TransitionSet { set: {Transition { symbol: Domain, id: 11 }, Transition { symbol: Range, id: 12 }} }, flow: FlowSet { set: {} } }, State { pol: Neg, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {5} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }, State { pol: Pos, cons: ConstructorSet { set: {Discriminant(0): Bool} }, trans: TransitionSet { set: {} }, flow: FlowSet { set: {} } }] }, 0)
